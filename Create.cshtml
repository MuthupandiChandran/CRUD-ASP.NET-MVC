@using Nivi.Models
@model Nivi.Models.Customer

@{
    ViewBag.Title = "Create";
}

<h2>Registration</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })<br />
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })<br />
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor((N) => N.DOB, new { htmlAttributes = new { @class = "datepicker", min = "1900-01-01", max = "2015-01-01" } })
            @Html.ValidationMessageFor((x) => x.DOB, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.RadioButtonFor(model => model.Gender, "Male ") <label>Male</label>

            @Html.RadioButtonFor(model => model.Gender, " Female ") <label> Female </label>

            @Html.RadioButtonFor(model => model.Gender, " other ") <label> other </label>
            @Html.ValidationMessageFor((model) => model.Gender, "", new { @class = "text-danger" })<br /><br />
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })<br />
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.occupation, htmlAttributes: new { @class = "control-label col-md-2" })
    </div>
    <div class="col-md-10">
        @Html.DropDownListFor((N) => N.occupation, new SelectList(Enum.GetValues(typeof(occupation))), "--Select--")
        @Html.ValidationMessageFor((N) => N.occupation, "", new { @class = "text-danger" })<br /><br />
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" onclick="return validateData();" value="Create" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery-1.11.3.min.js"></script>

